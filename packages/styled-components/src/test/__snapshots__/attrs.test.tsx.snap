// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`attrs aliasing an alternate theme via attrs makes it through to the child component 1`] = `
<DocumentFragment>
  <div
    class="sc-a"
    data-theme="{"foo":"bar"}"
  />
</DocumentFragment>
`;

exports[`attrs does not pass transient props to HTML element 1`] = `
<DocumentFragment>
  <div
    class="sc-a sc-b c"
  />
</DocumentFragment>
`;

exports[`attrs merge attrs 1`] = `
<DocumentFragment>
  <button
    class="sc-a"
    tabindex="0"
    type="submit"
  />
</DocumentFragment>
`;

exports[`attrs merge attrs when inheriting SC 1`] = `
<DocumentFragment>
  <button
    class="sc-a sc-b"
    tabindex="0"
    type="submit"
  />
</DocumentFragment>
`;

exports[`attrs pass a React component 1`] = `
<DocumentFragment>
  <button>
    <p>
      React Component
    </p>
  </button>
</DocumentFragment>
`;

exports[`attrs pass a simple attr via function with object return 1`] = `
<DocumentFragment>
  <button
    class="sc-a"
    type="button"
  />
</DocumentFragment>
`;

exports[`attrs pass a simple attr via object 1`] = `
<DocumentFragment>
  <button
    class="sc-a"
    type="button"
  />
</DocumentFragment>
`;

exports[`attrs pass attrs to style block 1`] = `
<DocumentFragment>
  <a
    class="sc-a b"
    data-active-class-name="--is-active"
    href="#"
  />
</DocumentFragment>
`;

exports[`attrs pass props to the attr function 1`] = `
<DocumentFragment>
  <button
    class="sc-a"
    type="button"
  />
</DocumentFragment>
`;

exports[`attrs pass props to the attr function 2`] = `
<DocumentFragment>
  <button
    class="sc-a"
    type="submit"
  />
</DocumentFragment>
`;

exports[`attrs should apply given "as" prop to the progressive type 1`] = `
<DocumentFragment>
  <video
    class="sc-a"
    loop=""
  />
</DocumentFragment>
`;

exports[`attrs should merge className 1`] = `
<DocumentFragment>
  <div
    class="sc-a meow nya"
  />
</DocumentFragment>
`;

exports[`attrs should merge className even if its a function 1`] = `
<DocumentFragment>
  <div
    class="sc-a meow nya"
  />
</DocumentFragment>
`;

exports[`attrs should merge className even if its a function 2`] = `
<DocumentFragment>
  <div
    class="sc-a meow purr"
  />
</DocumentFragment>
`;

exports[`attrs should override children of course 1`] = `
<DocumentFragment>
  <div
    class="sc-a"
  >
    <span>
      Amazing
    </span>
  </div>
</DocumentFragment>
`;

exports[`attrs should pass through children as a normal prop 1`] = `
<DocumentFragment>
  <div
    class="sc-a"
  >
    Probably a bad idea
  </div>
</DocumentFragment>
`;

exports[`attrs should pass through complex children as well 1`] = `
<DocumentFragment>
  <div
    class="sc-a"
  >
    <span>
      Probably a bad idea
    </span>
  </div>
</DocumentFragment>
`;

exports[`attrs should replace props with attrs 1`] = `
<DocumentFragment>
  <button
    class="sc-a"
    tabindex="0"
    type="button"
  />
</DocumentFragment>
`;

exports[`attrs should replace props with attrs 2`] = `
<DocumentFragment>
  <button
    class="sc-a"
    tabindex="0"
    type="button"
  />
</DocumentFragment>
`;

exports[`attrs should replace props with attrs 3`] = `
<DocumentFragment>
  <button
    class="sc-a"
    tabindex="0"
    type="button"
  />
</DocumentFragment>
`;

exports[`attrs should work with data and aria attributes 1`] = `
<DocumentFragment>
  <div
    aria-label="A simple FooBar"
    class="sc-a"
    data-foo="bar"
  />
</DocumentFragment>
`;

exports[`attrs work fine with a function that returns an empty object 1`] = `
<DocumentFragment>
  <div
    class="sc-a"
  />
</DocumentFragment>
`;

exports[`attrs work fine with an empty object 1`] = `
<DocumentFragment>
  <div
    class="sc-a"
  />
</DocumentFragment>
`;
