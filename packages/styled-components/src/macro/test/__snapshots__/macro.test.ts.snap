// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`macro should not add componentId with a config disabling ssr: should not add componentId with a config disabling ssr 1`] = `

import styled from '../../macro'

styled.div\`
  background: \${p => (p.error ? 'red' : 'green')};
\`

      ↓ ↓ ↓ ↓ ↓ ↓

import _styled from 'styled-components';

_styled.div.withConfig({
  displayName: 'macrotest',
})(['background:', ';'], p => (p.error ? 'red' : 'green'));


`;

exports[`macro should use a custom import with importModuleName: should use a custom import with importModuleName 1`] = `

import styled from '../../macro'

styled.div\`
  background: \${p => (p.error ? 'red' : 'green')};
\`

      ↓ ↓ ↓ ↓ ↓ ↓

import _styled from '@xstyled/styled-components';

_styled.div.withConfig({
  displayName: 'macrotest',
  componentId: 'sc-17fdca0-0',
})(['background:', ';'], p => (p.error ? 'red' : 'green'));


`;

exports[`macro should work when extending a component: should work when extending a component 1`] = `

import React from 'react'
import styled from '../../macro'

const Hello = () => React.createComponent(div, null, 'hello')

styled(Hello)\`
  background: red;
\`

      ↓ ↓ ↓ ↓ ↓ ↓

import _styled from 'styled-components';
import React from 'react';

const Hello = () => React.createComponent(div, null, 'hello');

_styled(Hello).withConfig({
  displayName: 'macrotest',
  componentId: 'sc-17fdca0-0',
})(['background:red;']);


`;

exports[`macro should work with { ThemeProvider }: should work with { ThemeProvider } 1`] = `

import { ThemeProvider } from '../../macro'

React.createComponent(
  ThemeProvider,
  { theme: { color: 'red' }},
  'hello'
)

      ↓ ↓ ↓ ↓ ↓ ↓

import { ThemeProvider as _ThemeProvider } from 'styled-components';
React.createComponent(
  _ThemeProvider,
  {
    theme: {
      color: 'red',
    },
  },
  'hello'
);


`;

exports[`macro should work with { createGlobalStyle }: should work with { createGlobalStyle } 1`] = `

import { createGlobalStyle } from '../../macro'

createGlobalStyle\`
  background: red;
\`

      ↓ ↓ ↓ ↓ ↓ ↓

import { createGlobalStyle as _createGlobalStyle } from 'styled-components';
_createGlobalStyle\`
  background: red;
\`;


`;

exports[`macro should work with { css }: should work with { css } 1`] = `

import { css } from '../../macro'

css\`
  color: \${props => (props.whiteColor ? 'white' : 'black')};
\`

      ↓ ↓ ↓ ↓ ↓ ↓

import { css as _css } from 'styled-components';

_css(['color:', ';'], props => (props.whiteColor ? 'white' : 'black'));


`;

exports[`macro should work with { keyframes }: should work with { keyframes } 1`] = `

import { keyframes } from '../../macro'

keyframes\`
  0% { opacity: 0; }
  100% { opacity: 1; }
\`

      ↓ ↓ ↓ ↓ ↓ ↓

import { keyframes as _keyframes } from 'styled-components';

_keyframes(['0%{opacity:0;}100%{opacity:1;}']);


`;

exports[`macro should work with custom import name: should work with custom import name 1`] = `

import myStyled from '../../macro'
import styled from 'another-package'

myStyled.div\`
  background: \${p => (p.error ? 'red' : 'green')};
\`

      ↓ ↓ ↓ ↓ ↓ ↓

import _styled from 'styled-components';

_styled.div.withConfig({
  displayName: 'macrotest',
  componentId: 'sc-17fdca0-0',
})(['background:', ';'], p => (p.error ? 'red' : 'green'));


`;

exports[`macro should work with multiple imports: should work with multiple imports 1`] = `

import styled, { css } from '../../macro'

      ↓ ↓ ↓ ↓ ↓ ↓

import { css as _css } from 'styled-components';
import _styled from 'styled-components';


`;

exports[`macro should work with require() to import styled-components: should work with require() to import styled-components 1`] = `

const styled = require('../../macro')

styled.div\`
  background: red;
\`

      ↓ ↓ ↓ ↓ ↓ ↓

import _styled from 'styled-components';

_styled.div.withConfig({
  displayName: 'macrotest',
  componentId: 'sc-17fdca0-0',
})(['background:red;']);


`;

exports[`macro should work with styled: should work with styled 1`] = `

import styled from '../../macro'

styled.div\`
  background: \${p => (p.error ? 'red' : 'green')};
\`

      ↓ ↓ ↓ ↓ ↓ ↓

import _styled from 'styled-components';

_styled.div.withConfig({
  displayName: 'macrotest',
  componentId: 'sc-17fdca0-0',
})(['background:', ';'], p => (p.error ? 'red' : 'green'));


`;

exports[`macro should work with the css prop overriding an existing styled-component: should work with the css prop overriding an existing styled-component 1`] = `

import React from 'react';
import styled from '../../macro'
const Thing = styled.div\`
  color: blue;
\`;
function Foo() {
  return <Thing css="color: red;" />;
}

      ↓ ↓ ↓ ↓ ↓ ↓

import _styled2 from 'styled-components';
import _styled from 'styled-components';
import React from 'react';

const Thing = _styled.div.withConfig({
  displayName: 'macrotest__Thing',
  componentId: 'sc-17fdca0-0',
})(['color:blue;']);

var _StyledThing = _styled(Thing).withConfig({
  displayName: 'macrotest___StyledThing',
  componentId: 'sc-17fdca0-1',
})(['color:red;']);

function Foo() {
  return /*#__PURE__*/ React.createElement(_StyledThing, null);
}


`;

exports[`macro should work with the css prop: should work with the css prop 1`] = `

import styled from '../../macro'
import React from 'react';
function Foo() {
  return <div css="color: red;" />;
}

      ↓ ↓ ↓ ↓ ↓ ↓

import _styled2 from 'styled-components';
import _styled from 'styled-components';
import React from 'react';

function Foo() {
  return /*#__PURE__*/ React.createElement(_StyledDiv, null);
}

var _StyledDiv = _styled('div').withConfig({
  displayName: 'macrotest___StyledDiv',
  componentId: 'sc-17fdca0-0',
})(['color:red;']);


`;

exports[`macro should work with types alongside import: should work with types alongside import 1`] = `

import styled, { DefaultTheme } from '../../macro'

      ↓ ↓ ↓ ↓ ↓ ↓

import { DefaultTheme as _DefaultTheme } from 'styled-components';
import _styled from 'styled-components';


`;

exports[`macro should work with types: should work with types 1`] = `

import { DefaultTheme } from '../../macro'

      ↓ ↓ ↓ ↓ ↓ ↓

import { DefaultTheme as _DefaultTheme } from 'styled-components';


`;
